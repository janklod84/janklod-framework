MAKE SETUP Q AND ADD ALIAS
=======================================================================
Ex:
Q::setup(\DB::instance());
Q::setup(\DB::instance())->addAlias('MyAlias');

========================================================
ADD CONNECTION AND CLASS ALIAS
=========================================================


$config = [
       'dsn' => 'mysql:host=localhost;port=3306;dbname=dbxxxx;charset=utf8',
       'user' => 'username',
       'password' => 'password'
 ];
Q::connect('mysql', $config)->addAlias('MyAlias');

debug(MyAlias::table('orders'));

=======================================================================
QUERY [FIND]
=======================================================================
Q::setup(\DB::instance());
Q::addTable('users');
$result = Q::getTable()->find(5);
debug($result);


=======================================================================
QUERY [ALL]
=======================================================================
SQL:
$sql = SELECT * FROM `users`
$results = Q::table('users')->all();
debug($results);
Array
(
    [0] => stdClass Object
        (
            [id] => 1
            [username] => newRecord1
            [password] => d60cfaf43ac5f0eb62fe3de9057c2a77
            [role] => 3
        )

    [1] => stdClass Object
        (
            [id] => 2
            [username] => newRecord2
            [password] => d60cfaf43ac5f0eb62fe3de9057c2a77
            [role] => 5
        )

    [2] => stdClass Object
        (
            [id] => 3
            [username] => newRecord3
            [password] => d60cfaf43ac5f0eb62fe3de9057c2a77
            [role] => 4
        )
)


EXEMPLE 2:

Q::setup(\DB::instance());
SQL:
SELECT * FROM `users`
$results = Q::getTable()->all();
debug($results);

=======================================================================
QUERY [ FINDALL ]
=======================================================================
Q::setup(\DB::instance());
$result = Q::table('users')
          ->findAll('username', 'password', 'role');
$result = Q::table('users')->findAll();
debug($result);

Q::setup(\DB::instance());
Q::addTable('users');
$result = Q::getTable()->findAll('username', 'password', 'role');
$result = Q::table('users')->findAll();
debug($result);


=======================================================================
QUERY [ FIND BY ]
=======================================================================
Q::setup(\DB::instance());
Q::addTable('users');
$result = Q::getTable()->findBy('username', 'JK');
debug($result);

OR 
Q::setup(\DB::instance());
$result = Q::table('users')->findBy('username', 'JK');
debug($result);

=======================================================================
QUERY [ READ ]
=======================================================================
Q::setup(\DB::instance());
Q::addTable('users');
$result = Q::getTable()->read('JK', 'username');
debug($result);

OR 
Q::setup(\DB::instance());
$result = Q::table('users')->read('JK', username');
debug($result);


=======================================================================
QUERY [WHERE]
=======================================================================
SQL: 
$sql = SELECT * FROM `users` WHERE id = ?  
$sql = SELECT * FROM `users` WHERE id = ? LIMIT 1
$results = Q::table('users')->where(5, 'id')
                            ->results();

debug($results);

Array
(
    [0] => stdClass Object
        (
            [id] => 5
            [username] => newRecord5
            [password] => d60cfaf43ac5f0eb62fe3de9057c2a77
            [role] => 9
        )

)


=======================================================================
QUERY [WHERE] WITH FIRST RESULT
=======================================================================
SQL: 
$sql = SELECT * FROM `users` WHERE id = ?  
$sql = SELECT * FROM `users` WHERE id = ? LIMIT 1

$result = Q::table('users')->where(5, 'id')
                               ->first();
debug($result);

stdClass Object
(
    [id] => 5
    [username] => newRecord5
    [password] => d60cfaf43ac5f0eb62fe3de9057c2a77
    [role] => 9
)

===========================================================
OTHER TEST
============================================================
Q::setup(\DB::instance());
$results = Q::getTable()->where(5, 'id')
                           ->first(); 
debug($results);

===============================================================
QUERY [CREATE RECORD]
===============================================================
Q::setup(\DB::instance());
Q::table('users')->create([
 'username' => 'NewBrowner',
 'password' => 'myNewBrower',
 'role' => 3
]);

or 
Q::setup(\DB::instance());
Q::addTable('users');
Q::getTable()->create([
 'username' => 'NewBrowner',
 'password' => 'myNewBrower',
 'role' => 3
]);

===============================================================
QUERY [READ RECORD]
===============================================================
Q::setup(\DB::instance());
$one = Q::table('users')->read(4);
debug($one);


===============================================================
QUERY [ UPDATE RECORD ]
===============================================================
Q::setup(\DB::instance());
$one = Q::table('users')->update([
  'username' => 'JK'
], 8);

debug($one);


===============================================================
QUERY [ DELETE RECORD ]  
===============================================================
Q::setup(\DB::instance());
$one = Q::table('users')->delete(8);
debug($one);


===============================================================
GET LAST ID & COUNT [ ROW COUNT ]
===============================================================
Q::setup(\DB::instance());
Q::addTable('users');
$c = Q::getTable()->create([
 'username' => 'NewBrowner9',
 'password' => 'myNewBrower34',
 'role' => 10
]);

debug($c);
echo Q::lastId();
echo Q::count();
--------------------------------------------
Q::setup(\DB::instance());
$c = Q::table('users')->create([
 'username' => 'NewBrowner9',
 'password' => 'myNewBrower34',
 'role' => 10
]);

debug($c);
echo Q::lastId();
echo Q::count();


TRANSACTION
====================================================================
Q::setup(\DB::instance());
Q::transaction('users', function () {

 Q::create([
   'username' => 'NewBrowner22',
   'password' => 'myNewBrower3',
   'role' => 15
]);

});

